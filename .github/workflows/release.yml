name: Release

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      pre-release:
        description: 'Create pre-release'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --if-present

      - name: Bump version
        id: version
        run: |
          OLD_VERSION=$(npm pkg get version --json | jq -r '.')
          npm version ${{ inputs.version-type }} --no-git-tag-version
          NEW_VERSION=$(npm pkg get version --json | jq -r '.')
          echo "old-version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag-name=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          echo "## What's Changed" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD~10")..HEAD >> RELEASE_NOTES.md || echo "- Initial release" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## Installation" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "\`\`\`bash" >> RELEASE_NOTES.md
          echo "npx playground-azure@${{ steps.version.outputs.new-version }}" >> RELEASE_NOTES.md
          echo "\`\`\`" >> RELEASE_NOTES.md

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new-version }}"
          git tag ${{ steps.version.outputs.tag-name }}

      - name: Push changes
        run: |
          git push origin main
          git push origin ${{ steps.version.outputs.tag-name }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag-name }}
          release_name: Release ${{ steps.version.outputs.tag-name }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: ${{ inputs.pre-release }}

  notify:
    needs: release
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Release notification
        run: |
          echo "ðŸŽ‰ Successfully released playground-azure@${{ needs.release.outputs.new-version }}"
          echo "ðŸ“¦ Install with: npx playground-azure@${{ needs.release.outputs.new-version }}"